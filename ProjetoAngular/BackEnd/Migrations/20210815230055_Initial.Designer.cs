// <auto-generated />
using System;
using BackEnd.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BackEnd.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210815230055_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BackEnd.Models.Administrador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("Administrador");

                    b.HasData(
                        new
                        {
                            id = 1,
                            email = "Thiago@hotmail.com",
                            nome = "Thiago Juliano da Silva",
                            senha = "123456"
                        },
                        new
                        {
                            id = 2,
                            email = "Jaqueline@hotmail.com",
                            nome = "Jaqueline Maria da Silva",
                            senha = "234567"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Autor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("id");

                    b.ToTable("Autor");

                    b.HasData(
                        new
                        {
                            id = 1,
                            nome = "Agatha Christie"
                        },
                        new
                        {
                            id = 2,
                            nome = "Stephen Edwin King"
                        },
                        new
                        {
                            id = 3,
                            nome = "Alexandre Dumas"
                        },
                        new
                        {
                            id = 4,
                            nome = "Victor Hugo"
                        },
                        new
                        {
                            id = 5,
                            nome = "Machado de Assis"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Classificacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("anos")
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("id");

                    b.ToTable("Classificacao");

                    b.HasData(
                        new
                        {
                            id = 1,
                            anos = 14,
                            descricao = "Conteúdo para adolescentes"
                        },
                        new
                        {
                            id = 2,
                            anos = 18,
                            descricao = "Conteúdo Adultos"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Cliente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("celular")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("varchar(11)");

                    b.Property<DateTime>("dataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("sexo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.ToTable("Cliente");

                    b.HasData(
                        new
                        {
                            id = 1,
                            celular = "(047)9 5555-7777",
                            cidade = "Blumenau",
                            cpf = "33344455533",
                            dataNascimento = new DateTime(1986, 9, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "Diego@hotmail.com",
                            endereco = "Rua Legal Número 1720",
                            estado = "Santa Catarina",
                            nome = "Diego",
                            senha = "765432",
                            sexo = "M"
                        },
                        new
                        {
                            id = 2,
                            celular = "(047)9 9999-3333",
                            cidade = "São Paulo",
                            cpf = "44455577744",
                            dataNascimento = new DateTime(2000, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "Anizio@Gmail.com",
                            endereco = "Rua Bacana Número 1315",
                            estado = "São Paulo",
                            nome = "Anizio",
                            senha = "345678",
                            sexo = "M"
                        },
                        new
                        {
                            id = 3,
                            celular = "(047)9 3333-2222",
                            cidade = "Blumenau",
                            cpf = "12332112323",
                            dataNascimento = new DateTime(1989, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "Lucian@hotmail.com",
                            endereco = "Rua Incrível Número 1450",
                            estado = "Santa Catarina",
                            nome = "Lucian",
                            senha = "987543",
                            sexo = "M"
                        },
                        new
                        {
                            id = 4,
                            celular = "(047)9 1111-4444",
                            cidade = "Blumenau",
                            cpf = "43223443254",
                            dataNascimento = new DateTime(1994, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            email = "Maria@Gmail.com",
                            endereco = "Rua Incrível Número 1453",
                            estado = "Santa Catarina",
                            nome = "Maria",
                            senha = "887744",
                            sexo = "F"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Compra", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("clienteId")
                        .HasColumnType("int");

                    b.Property<double>("total")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("clienteId");

                    b.ToTable("Compra");

                    b.HasData(
                        new
                        {
                            id = 1,
                            clienteId = 1,
                            total = 26.5
                        },
                        new
                        {
                            id = 2,
                            clienteId = 1,
                            total = 54.0
                        },
                        new
                        {
                            id = 3,
                            clienteId = 2,
                            total = 29.75
                        },
                        new
                        {
                            id = 4,
                            clienteId = 2,
                            total = 100.0
                        },
                        new
                        {
                            id = 5,
                            clienteId = 3,
                            total = 15.25
                        },
                        new
                        {
                            id = 6,
                            clienteId = 3,
                            total = 30.5
                        },
                        new
                        {
                            id = 7,
                            clienteId = 4,
                            total = 44.25
                        },
                        new
                        {
                            id = 8,
                            clienteId = 4,
                            total = 35.0
                        });
                });

            modelBuilder.Entity("BackEnd.Models.CompraItem", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("compraId")
                        .HasColumnType("int");

                    b.Property<int>("livroId")
                        .HasColumnType("int");

                    b.Property<int>("quantidade")
                        .HasColumnType("int");

                    b.Property<double>("valorUnitario")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.HasIndex("compraId");

                    b.HasIndex("livroId");

                    b.ToTable("CompraItem");

                    b.HasData(
                        new
                        {
                            id = 1,
                            compraId = 1,
                            livroId = 1,
                            quantidade = 1,
                            valorUnitario = 26.5
                        },
                        new
                        {
                            id = 2,
                            compraId = 2,
                            livroId = 2,
                            quantidade = 1,
                            valorUnitario = 54.0
                        },
                        new
                        {
                            id = 3,
                            compraId = 3,
                            livroId = 3,
                            quantidade = 1,
                            valorUnitario = 29.75
                        },
                        new
                        {
                            id = 4,
                            compraId = 4,
                            livroId = 4,
                            quantidade = 1,
                            valorUnitario = 100.0
                        },
                        new
                        {
                            id = 5,
                            compraId = 5,
                            livroId = 3,
                            quantidade = 1,
                            valorUnitario = 15.25
                        },
                        new
                        {
                            id = 6,
                            compraId = 6,
                            livroId = 4,
                            quantidade = 1,
                            valorUnitario = 30.5
                        },
                        new
                        {
                            id = 7,
                            compraId = 7,
                            livroId = 2,
                            quantidade = 1,
                            valorUnitario = 44.25
                        },
                        new
                        {
                            id = 8,
                            compraId = 8,
                            livroId = 1,
                            quantidade = 1,
                            valorUnitario = 35.0
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Genero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("id");

                    b.ToTable("Genero");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descricao = "Comédia"
                        },
                        new
                        {
                            id = 2,
                            descricao = "Romance"
                        },
                        new
                        {
                            id = 3,
                            descricao = "Ação"
                        },
                        new
                        {
                            id = 4,
                            descricao = "Aventura"
                        },
                        new
                        {
                            id = 5,
                            descricao = "Sobrenatural"
                        },
                        new
                        {
                            id = 6,
                            descricao = "Terror"
                        },
                        new
                        {
                            id = 7,
                            descricao = "Suspense"
                        },
                        new
                        {
                            id = 8,
                            descricao = "Ficção"
                        },
                        new
                        {
                            id = 9,
                            descricao = "Fantasia"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Livro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("autorId")
                        .HasColumnType("int");

                    b.Property<int>("classificacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<double>("edicao")
                        .HasColumnType("float");

                    b.Property<int>("generoId")
                        .HasColumnType("int");

                    b.Property<string>("imagemURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("marcaId")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.Property<int>("pagina")
                        .HasColumnType("int");

                    b.Property<int>("segmentoId")
                        .HasColumnType("int");

                    b.Property<string>("tipoCapa")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("id");

                    b.HasIndex("autorId");

                    b.HasIndex("classificacaoId");

                    b.HasIndex("generoId");

                    b.HasIndex("marcaId");

                    b.HasIndex("segmentoId");

                    b.ToTable("Livro");

                    b.HasData(
                        new
                        {
                            id = 1,
                            autorId = 1,
                            classificacaoId = 1,
                            dataPublicacao = new DateTime(2020, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            edicao = 1.0,
                            generoId = 7,
                            imagemURL = "morteNoNilo.jpg",
                            marcaId = 1,
                            nome = "Morte no Nilo",
                            pagina = 320,
                            segmentoId = 1,
                            tipoCapa = "Dura"
                        },
                        new
                        {
                            id = 2,
                            autorId = 2,
                            classificacaoId = 2,
                            dataPublicacao = new DateTime(2017, 8, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            edicao = 1.0,
                            generoId = 6,
                            imagemURL = "oIluminado.jpg",
                            marcaId = 2,
                            nome = "O Iluminado",
                            pagina = 520,
                            segmentoId = 1,
                            tipoCapa = "Dura"
                        },
                        new
                        {
                            id = 3,
                            autorId = 3,
                            classificacaoId = 2,
                            dataPublicacao = new DateTime(2020, 3, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            edicao = 3.0,
                            generoId = 8,
                            imagemURL = "oCondeDeMonteCristo.jpg",
                            marcaId = 3,
                            nome = "O Conde de Monte Cristo",
                            pagina = 1376,
                            segmentoId = 1,
                            tipoCapa = "Dura"
                        },
                        new
                        {
                            id = 4,
                            autorId = 4,
                            classificacaoId = 2,
                            dataPublicacao = new DateTime(2014, 10, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            edicao = 1.0,
                            generoId = 8,
                            imagemURL = "osMiseraveis.jpg",
                            marcaId = 4,
                            nome = "Os Miseráveis",
                            pagina = 1511,
                            segmentoId = 1,
                            tipoCapa = "Dura"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Marca", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("id");

                    b.ToTable("Marca");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descricao = "HarperCollins"
                        },
                        new
                        {
                            id = 2,
                            descricao = "Suma"
                        },
                        new
                        {
                            id = 3,
                            descricao = "Clássicos Zahar"
                        },
                        new
                        {
                            id = 4,
                            descricao = "Martin Claret"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Segmento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("varchar(70)");

                    b.HasKey("id");

                    b.ToTable("Segmento");

                    b.HasData(
                        new
                        {
                            id = 1,
                            descricao = "Livros"
                        },
                        new
                        {
                            id = 2,
                            descricao = "Mangás"
                        },
                        new
                        {
                            id = 3,
                            descricao = "HQs"
                        });
                });

            modelBuilder.Entity("BackEnd.Models.Compra", b =>
                {
                    b.HasOne("BackEnd.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("BackEnd.Models.CompraItem", b =>
                {
                    b.HasOne("BackEnd.Models.Compra", "compra")
                        .WithMany("CompraItems")
                        .HasForeignKey("compraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Livro", "livro")
                        .WithMany("compraItems")
                        .HasForeignKey("livroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("livro");
                });

            modelBuilder.Entity("BackEnd.Models.Livro", b =>
                {
                    b.HasOne("BackEnd.Models.Autor", "autor")
                        .WithMany("Livros")
                        .HasForeignKey("autorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Classificacao", "classificacao")
                        .WithMany("Livros")
                        .HasForeignKey("classificacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Genero", "genero")
                        .WithMany("Livros")
                        .HasForeignKey("generoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Marca", "marca")
                        .WithMany("Livros")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackEnd.Models.Segmento", "segmento")
                        .WithMany("Livros")
                        .HasForeignKey("segmentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");

                    b.Navigation("classificacao");

                    b.Navigation("genero");

                    b.Navigation("marca");

                    b.Navigation("segmento");
                });

            modelBuilder.Entity("BackEnd.Models.Autor", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BackEnd.Models.Classificacao", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BackEnd.Models.Compra", b =>
                {
                    b.Navigation("CompraItems");
                });

            modelBuilder.Entity("BackEnd.Models.Genero", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BackEnd.Models.Livro", b =>
                {
                    b.Navigation("compraItems");
                });

            modelBuilder.Entity("BackEnd.Models.Marca", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("BackEnd.Models.Segmento", b =>
                {
                    b.Navigation("Livros");
                });
#pragma warning restore 612, 618
        }
    }
}
